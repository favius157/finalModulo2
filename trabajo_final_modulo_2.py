# -*- coding: utf-8 -*-
"""Trabajo final modulo 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11idSCcJ0S5DCZZ9SZ7dvEvzkB_yYrEHJ
"""

import pandas as pd

class Covid:
    ruta_archivo = 'COVID/metadata.csv'
    def __init__(self):
        self.cargarDatos()

    def cargarDatos(self):
        self.df = pd.read_csv(ruta_archivo)
        #print(self.df)

    def insertarRadioCovid(self, formato, tamaño, url):
        # Obtener el último registro
        ultimoRegistrado = self.df['FILE NAME'].iloc[-1]
        print("Ultimo registrado:", ultimoRegistrado)

        # Verificar si el segundo elemento es un número
        try:
            ultimoRegistrado = ultimoRegistrado.split("-")
            print("Split:", ultimoRegistrado)

            if len(ultimoRegistrado) > 1:
                numero = int(ultimoRegistrado[1])
                nuevo_registro = pd.DataFrame({
                    'FILE NAME': ['COVID-' + str(numero + 1)],
                    'FORMAT': [formato],
                    'SIZE': [tamaño],
                    'URL': [url]
                })

                self.df = pd.concat([self.df, nuevo_registro], ignore_index=True)
                print("Registro agregado correctamente.")
            else:
                print("Error al convertir")
        except ValueError:
            print("Error al convertir")

    def ModificarRadioCovid(self, nombre, formato, tamaño, url):
        self.df.loc[self.df['FILE NAME'] == nombre, 'FORMAT'] = 'otro formato'
        self.df.loc[self.df['FILE NAME'] == nombre, 'SIZE'] = 'otro tamaño'
        self.df.loc[self.df['FILE NAME'] == nombre, 'URL'] = 'otra ruta'
        print("Se modificó el registro correctamente")
        print(self.df)

    def EliminarRadioCovid(self, nombre):
        self.df = self.df[self.df['FILE NAME'] != nombre]
        print("Se borró el registro")
        print(self.df)

    def verDatos(self):
        print(self.df)





class Neumonia:
    ruta_archivo = 'NEUMONIA/metadata.csv'
    def __init__(self):
        self.cargarDatos()

    def cargarDatos(self):
        self.df = pd.read_csv(ruta_archivo)
        #print(self.df)

    def insertarRadioNeumo(self, formato, tamaño, url):
        # Obtener el último registro
        ultimoRegistrado = self.df['FILE NAME'].iloc[-1]
        print("Ultimo registrado:", ultimoRegistrado)

        # Verificar si el segundo elemento es un número
        try:
            ultimoRegistrado = ultimoRegistrado.split("-")
            print("Split:", ultimoRegistrado)

            if len(ultimoRegistrado) > 1:
                numero = int(ultimoRegistrado[1])
                nuevo_registro = pd.DataFrame({
                    'FILE NAME': ['Viral Pneumonia-' + str(numero + 1)],
                    'FORMAT': [formato],
                    'SIZE': [tamaño],
                    'URL': [url]
                })

                self.df = pd.concat([self.df, nuevo_registro], ignore_index=True)
                print("Registro agregado correctamente.")
            else:
                print("Error al convertir")
        except ValueError:
            print("Error al convertir")

    def ModificarRadioNeumo(self, nombre, formato, tamaño, url):
        self.df.loc[self.df['FILE NAME'] == nombre, 'FORMAT'] = 'otro formato'
        self.df.loc[self.df['FILE NAME'] == nombre, 'SIZE'] = 'otro tamaño'
        self.df.loc[self.df['FILE NAME'] == nombre, 'URL'] = 'otra ruta'
        print("Se modificó el registro correctamente")
        print(self.df)

    def EliminarRadioNeumo(self, nombre):
        self.df = self.df[self.df['FILE NAME'] != nombre]
        print("Se borró el registro")
        print(self.df)

class Normal:

    ruta_archivo = 'NORMAL/metadata.csv'
    def __init__(self):
        self.cargarDatos()

    def cargarDatos(self):
        self.df = pd.read_csv(ruta_archivo)
        #print(self.df)

    def insertarRadioNormal(self, formato, tamaño, url):
        # Obtener el último registro
        ultimoRegistrado = self.df['FILE NAME'].iloc[-1]
        print("Ultimo registrado:", ultimoRegistrado)

        # Verificar si el segundo elemento es un número
        try:
            ultimoRegistrado = ultimoRegistrado.split("-")
            print("Split:", ultimoRegistrado)

            if len(ultimoRegistrado) > 1:
                numero = int(ultimoRegistrado[1])
                nuevo_registro = pd.DataFrame({
                    'FILE NAME': ['NORMAL-' + str(numero + 1)],
                    'FORMAT': [formato],
                    'SIZE': [tamaño],
                    'URL': [url]
                })

                self.df = pd.concat([self.df, nuevo_registro], ignore_index=True)
                print("Registro agregado correctamente.")
            else:
                print("Error al convertir")
        except ValueError:
            print("Error al convertir")

    def ModificarRadioNormal(self, nombre, formato, tamaño, url):
        self.df.loc[self.df['FILE NAME'] == nombre, 'FORMAT'] = 'otro formato'
        self.df.loc[self.df['FILE NAME'] == nombre, 'SIZE'] = 'otro tamaño'
        self.df.loc[self.df['FILE NAME'] == nombre, 'URL'] = 'otra ruta'
        print("Se modificó el registro correctamente")
        print(self.df)

    def EliminarRadioNormal(self, nombre):
        self.df = self.df[self.df['FILE NAME'] != nombre]
        print("Se borró el registro")
        print(self.df)

class Radiografia:

  covid = Covid()
  neumo = Neumonia()
  normal = Normal()

  def __init__(self):
    self.covid.cargarDatos()
    self.neumo.cargarDatos()
    self.normal.cargarDatos()

  def borrarRadiografia(self, categoria, nombre):
      if categoria == "covid":
        self.covid.EliminarRadioCovid(nombre)

      if categoria == "neumo":
        self.neumo.EliminarRadioNeumo(nombre)

      if categoria == "normal":
        self.normal.EliminarRadioNormal(nombre)

  def agregarRadiografia(self, categoria, formato, tamaño, url):

      if categoria == "covid":
        self.covid.insertarRadioCovid(formato, tamaño, url)

      if categoria == "neumo":
        self.neumo.insertarRadioNeumo(formato, tamaño, url)

      if categoria == "normal":
        self.normal.insertarRadioNormal((formato, tamaño, url))


  def modificarRadiografia(self, categoria, formato, tamaño, url, nombre):
      if categoria == "covid":
        self.covid.ModificarRadioCovid(nombre, formato, tamaño, url)

      if categoria == "neumo":
        self.neumo.ModificarRadioNeumo(nombre, formato, tamaño, url)

      if categoria == "normal":
        self.normal.ModificarRadioNormal(nombre, formato, tamaño, url)

radiografia = Radiografia()



  radiografia.covid.verDatos()
  radiografia.borrarRadiografia("covid", "COVID-1")